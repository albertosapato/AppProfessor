<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnApagar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAIxJREFUOE9jGDyAa/KjOxwTH9lDuTgB96QHTlwTH9yEchEApJlj4sOX+AwBaQar
        mfLQBiqECvAZQlAzDGAzhGjNMIBsCMmaYQBsyKRH79knPHpHsmYQANkM1jzxMRATjh0UgOxsZO9ApfED
        bH4m2hB8AUbQEGJCG68hoORJTGiDNHNOfnQVyh1wwMAAAKYpfmLc+TgaAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnNovo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAGFJREFUOE9jGNyAe9KjYs5JD/KgXNIB5+SHDVyTHtVAuaSDIWYAOMCAGlDxgwOc
        kx7uwxR/WADVhgCg0AbZhozBmic+2oMhPvlRNlQbfgCyDaQByiUdDA8DCogOsAECDAwAJ51Xu64LxMkA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAOxJREFUOE/dkjGqAjEQhtNsEivfCdSb6C3UytdaaGUpiGChO+PmEt7jFRavEgt3
        kkq8ipkQdSMKdoofDDNM/n8YyIgPAnZNjTSR+WGT5bTNkP6SyO1W5rTR6CZiWTai6wabQwY7UMa1QrOC
        BmoqdL+hjtoEiXbG+ZUBF23Cdw3o1YDGPKgaNXQjjWW/qk24NmcnzRs8Cn5LtFUeNp+goDSxvJEMWB7r
        CmnIq0ugaQZ2Icz+h5/02rbDNvfowl9YhEXe3GOhNtRVhZsrcJ1g9jnK7vDnGU7Zb8IrZlD+8wlLpL1a
        EfkfMM/N70OIMwNepDTipIHcAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="turmasViewModelsBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>51</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVVVVElpaWlhaWlpxWlpahVpaWoVaWlpxW1tbV1paWhEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAW1tbRlpaWrpbW1vFXFxcfVxcXFZcXFw6XFxcOltbW1dcXFx9W1tbxltbW7laWlpEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWlpaH1paWrpbW1ugWFhYIAAAAABbW1scAAAAAFxcXDJYWFgxAAAAAFhYWB0AAAAAXV1dIVtb
        W6NbW1u4WFhYHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFlZWTlbW1vNXV1dN1VVVQ9bW1sOAAAAAFtbW1cAAAAAZmZmCmZmZgoAAAAAXFxcVgAA
        AABbW1sOVVVVD1lZWTlbW1vNW1tbOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        81//8A8///2////4H///+9////gf//////8=
</value>
  </data>
</root>